# Continuous Deployment
#
# References:
#
# - https://docs.github.com/en/actions/guides/building-and-testing-nodejs
# - https://jestjs.io/docs/cli#--ci
# - https://octokit.github.io/rest.js/#pagination

---
name: Continuous Deployment
on:
  pull_request_review:
    branches: ['release/**']
    types: [submitted]
jobs:
  continuous-deployment:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    env:
      PAT_GPR_FLDV: ${{ secrets.PAT_GPR }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          always-auth: true
          cache: 'yarn'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@flex-development'
      - name: Install dependencies
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${PAT_GPR_FLDV}
      - name: Run test suites
        run: TERM=xterm-256color yarn test --ci
      - name: Get release info
        uses: actions/github-script@v4
        id: release
        with:
          script: core.setOutput('t', github.ref.split('release/')[1])
      - name: Publish GitHub Release
        uses: actions/github-script@v4
        with:
          script: |
            const releases = await github.paginate(github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            }))

            const version = github.ref.split('release/autoreview@')[1]

            releases.forEach(release => {
              release.tag_name === `v${version}` && github.repo.updateRelease({
                owner: context.repo.owner,
                draft: false,
                release_id: release.id,
                repo: context.repo.repo
              })
            })
      - name: Automerge pull request
        uses: pascalgn/automerge-action@v0.14.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COMMIT_MESSAGE: 'merge: release ${{ steps.release.outputs.t }}'
          MERGE_METHOD: merge
      - name: Merge next into main
        uses: devmasx/merge-branch@v1.3.1
        with:
          github_token: ${{ github.token }}
          from_branch: next
          target_branch: main
          type: now
      - name: Close issues with status:merged label
        uses: bdougie/close-issues-based-on-label@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LABEL: status:merged
      - name: Add status:released label to closed issues
        uses: actions/github-script@v4
        with:
          script: |
            const opts = github.issues.listForRepo(context.issue)
            const issues = await github.paginate(opts)

            issues.forEach(issue => {
              issue.labels.forEach(label => {
                label.name === 'status:merged' && github.issues.addLabels({
                  issue_number: issue.number,
                  labels: ['status:released'],
                  owner: context.repo.owner,
                  repo: context.repo.repo
                })
              })
            })
